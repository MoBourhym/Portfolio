---
import type { Certification } from "@/data/certifications";
import { Icon } from "astro-icon/components";

type Props = Certification;

const { title, issuer, date, credentialID, credentialURL, skills } = Astro.props;
---

<article class="flex flex-col gap-2 p-5 border border-gray-200 dark:border-neutral-800 rounded-xl bg-gray-50 dark:bg-neutral-950 shadow-md transition-all duration-300 hover:border-orange-300 dark:hover:border-orange-700 hover:shadow-lg">
  <div class="flex flex-col md:flex-row justify-between items-start gap-2">
    <h3 class="text-lg font-semibold text-gray-900 dark:text-neutral-100">{title}</h3>
    <p class="text-sm bg-gray-200 dark:bg-neutral-800 px-3 py-1 rounded-full text-gray-700 dark:text-neutral-300">
      {date}
    </p>
  </div>
  
  <p class="text-gray-700 dark:text-neutral-300 font-medium">
    {issuer}
  </p>
  
  {credentialURL && (
    <a 
      href={credentialURL} 
      target="_blank" 
      rel="noopener noreferrer" 
      class="flex items-center gap-2 text-sm text-orange-500 hover:text-orange-600 dark:text-orange-400 dark:hover:text-orange-300 transition-colors duration-300 w-fit"
    >
      {/* <Icon name="badge" class="h-4 w-4" /> */}
      <span>View Credential {credentialID ? `#${credentialID}` : ''}</span>
    </a>
  )}

  {skills && skills.length > 0 && (
    <div class="flex flex-wrap gap-2 mt-2">
      {skills.map((skill) => (
        <span class="px-3 py-1 text-xs text-gray-700 dark:text-neutral-200 bg-gray-200 dark:bg-neutral-800 rounded-full transition-colors duration-300 hover:bg-orange-100 dark:hover:bg-orange-900/30">
          {skill}
        </span>
      ))}
    </div>
  )}
</article>
